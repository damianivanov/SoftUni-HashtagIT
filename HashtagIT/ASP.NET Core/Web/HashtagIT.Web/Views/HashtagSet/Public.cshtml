@model HashtagIT.Web.ViewModels.HashtagSets.AllPublicHashtagSetsViewModel
@using HashtagIT.Common;
@{ 
   
}

<nav class="row justify-content-around">
    <div class="align-left py-1">
        <a type="button" class="btn btn-outline-dark my-1" href="/HashtagSet/MySets">My Set</a>
    </div>
    <div class="align-right py-1">
        <a type="submit" class="btn btn-outline-dark my-1" href="/HashtagSet/Public">Public</a>
    </div>
</nav>

<div class="container">
    <div style="text-align:center">
        <h1 id="mineTitle">Public Hashtag Sets</h1>
        <div class="ml-auto">
            <a href="/HashtagSet/Create" class="btn btn-primary">Create</a>
        </div>
    </div>
    <br />

    <div class="container">
        @foreach (var hashtagSet in @Model.HashtagSets)
        {
            <div class="row justify-content-start">
                <div class="rounded-right">
                    <i class="fas fa-user" style="color: #fed136"></i>
                    <label id="mineUserName">@hashtagSet.UserUserName</label>
                    <a class="btn btn-outline-warning align-right ml-2 my-2" href="#" onclick="Random(@hashtagSet.Id); return false">RANDOMIZE</a>
                    <div class="row px-3 py-1"> 
                        <form id="randomizeForm" method="post">
                            @if (hashtagSet.UserUserName == this.User.Identity.Name ||
                            this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                            {
                                <a href="/HashtagSet/ById/@hashtagSet.Id">
                                    <label style="cursor:pointer" class="text-dark bg-light mb-3" id="@hashtagSet.Id">@hashtagSet.Text</label>
                                </a>
                            }
                            else
                            {
                                <label class="text-dark bg-light mb-3" id="@hashtagSet.Id">@hashtagSet.Text</label>
                            }
                        </form>
                    </div>
                </div>
            </div>

            <!--Info-->
            <div class="d-flex flex-row-reverse">
                <form id="voteForm" method="post" class="pl-2">
                    <a href="#" onclick="Vote(@hashtagSet.Id); return false">
                        <i class="far fa-star"></i>
                    </a>
                    <label class="@hashtagSet.Id">@hashtagSet.VotesCount</label>
                </form>

                <p>
                    <i class="fas fa-list"></i>
                    <label>@hashtagSet.Category.Name</label> |
                    <i class="far fa-clock"></i>
                    <time datetime="@hashtagSet.CreatedOn.ToString("f")" class="font-italic"></time> |
                    <i class="fas fa-hashtag"></i>
                    <label class="text-danger">Hashtags: @hashtagSet.HashtagCount</label> |
                </p>

                <!--Voting-->

            </div>
            <hr />
        }
    </div>
</div>

<!--Pagination-->
<nav>
    <ul class="pagination justify-content-center">
        @if (Model.CurrentPage == 1)
        {
            <li class="page-item disabled">
                <span class="page-link">Previous</span>
            </li>

        }
        else
        {
            <li class="page-item">
                <a class="page-link"
                   asp-route-page="@(this.Model.CurrentPage - 1)">Previous</a>
            </li>
        }
        @for (int i = 1; i <= Model.PagesCount; i++)
        {
            var active = i == this.Model.CurrentPage ? "active" : string.Empty;
            <li class="page-item @active">
                <a class="page-link" asp-route-page="@i">@i</a>
            </li>
        }
        @if (this.Model.CurrentPage == this.Model.PagesCount)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Next</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link"
                   asp-route-page="@(this.Model.CurrentPage + 1)">Next</a>
            </li>
        }
    </ul>
</nav>

@section Scripts{

    <script>
        function Vote(hashtagSetId) {
            var token = $('#voteForm input[name=__RequestVerificationToken]').val();
            var json = hashtagSetId;
            $.ajax({
                url: "/api/votes",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json charset=utf-8",
                headers: { 'X-CSRF-TOKEN': token },
                dataType: "json",
                success: function (data) {
                    $("." + json).text(data.votesCount);
                }
            });
        }

        function Random(hashtags) {
            var token = $('#randomizeForm input[name=__RequestVerificationToken]').val();
            var json = hashtags;
            $.ajax({
                url: "/api/randomize",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json charset=utf-8",
                headers: { 'X-CSRF-TOKEN': token },
                dataType: "json",
                success: function (data) {
                    $("#" + json).text(data.text);
                }

            });
        }
    </script>
}
